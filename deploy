#! /bin/bash

usage()
{
cat << EOF
usage: $0 options

This script deploys code to the elastic beanstalk environment associated with this git branch.

OPTIONS:
   -h      Show this message
EOF
}

FEATURE_BRANCH=$1
if [[ -z "$FEATURE_BRANCH" ]]
then
    echo "You must specify a feature branch to deploy, e.g. './deploy HotFix_LoginBug'."
    exit
fi

GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

if [[ $GIT_BRANCH =~ production ]]
then
    echo "You're about to deploy from a production git branch: $GIT_BRANCH are you sure? (yes/no)"
    read CONFIRMATION
    if [[ $CONFIRMATION != yes ]]
    then
        echo "Deployment cancelled."
        exit
    fi
fi

echo "Pulling from origin branch $GIT_BRANCH."
git pull origin $GIT_BRANCH
ORIGIN_PULL_STATUS=$?
if [[ $ORIGIN_PUSH_STATUS -ne 0 ]]
then
    echo "Unable complete pull from origin branch $GIT_BRANCH."
    exit
else
    echo "Pull from origin branch $GIT_BRANCH successful.  Merging feature branch $FEATURE_BRANCH."
fi

git merge $FEATURE_BRANCH
MERGE_STATUS=$?
if [[ $MERGE_STATUS -ne 0 ]]
then
    echo "Unable to completely merge $FEATURE_BRANCH into $GIT_BRANCH."
    exit
else
    echo "$FEATURE_BRANCH merged into $GIT_BRANCH. Beginning testing."
fi

composer install
COMPOSER_STATUS=$?

if [[ $COMPOSER_STATUS -gt 0 ]]
then
    php composer.phar install
    COMPOSER_STATUS=$?
    if [[ $COMPOSER_STATUS -gt 0 ]]
    then
        echo "Unable to update vendors. Make sure one of 'composer install' or 'php composer.phar install' works."
        exit
    fi
fi

echo "Clearing test environment cache."
php app/console --env=test cache:clear

echo "Beginning PHPUnit testing."
bin/phpunit -c app -d memory_limit=2048M
PHPUNIT_STATUS=$?

if [[ $PHPUNIT_STATUS -ne 0 ]]
then
    echo "PHPUnit failures or errors detected."
    echo "(Or PHPUnit initialization failed.  Make sure that 'bin/phpunit -c app' works.)"
    exit
fi

echo "No PHPUnit failures or errors detected. Please review the test results.  Would you like to continue deployment? (yes/no)"
read CONFIRMATION
if [[ $CONFIRMATION != yes ]]
then
    echo "Deployment cancelled."
    exit
fi

echo "PHPUnit results accepted.  Pushing to origin branch $GIT_BRANCH"
git push origin $GIT_BRANCH
ORIGIN_PUSH_STATUS=$?
if [[ $ORIGIN_PUSH_STATUS -ne 0 ]]
then
    echo "Unable to push to origin branch $GIT_BRANCH:"
    exit
else
    echo "Push to origin branch $GIT_BRANCH successful.  Deploying to Elastic Beanstalk."
    git aws.push
    AWS_STATUS=$?
    if [[ $AWS_STATUS -ne 0 ]]
    then
        echo "There was an error pushing to AWS."
        exit
    else
        echo "******************************************"
        echo "*********BOOM!**********DEPLOYED!*********"
        echo "******************************************"
    fi
fi

if [[ $GIT_BRANCH =~ production ]]
then
    echo "Would you like to merge your feature branch into the development trunk (recommended)? (yes/no)"
    read CONFIRMATION
    if [[ $CONFIRMATION != yes ]]
    then
        echo "Make sure to manually merge your feature branch into the development trunk (and push it to origin) when you're ready."
        exit
    fi
    git checkout development
    git merge $FEATURE_BRANCH
    MERGE_STATUS=$?
    if [[ $MERGE_STATUS -ne 0 ]]
    then
        echo "Unable to fully merge feature branch into origin branch."
        echo "Please fix any conflicts and merge the branch manually."
        exit
    else
        echo "$FEATURE_BRANCH merged into development. Pushing to origin."
    fi
    git push origin development
    PUSH_STATUS=$?
    if [[ $PUSH_STATUS -ne 0 ]]
    then
        echo "Unable to push to origin development branch. Please fix any problems and push manually."
        exit
    else
        echo "Push successful. All done! Just use 'git checkout -b NewFeatureBranch' to start your next task!"
    fi
fi